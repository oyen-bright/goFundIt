{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "GoFundIt is a collaborative platform enabling families and friends to plan and fund group activities, such as vacations and events. Features end-to-end encryption, secure payment handling, and flexible contribution options.",
        "title": "GoFundIt API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://gofundit.com/support",
            "email": "oyeniyibright@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/activity/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all activities for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get Activities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activities fetched successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Activity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new activity for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Create Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activity Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Activity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific activity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity fetched successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Activity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Activity ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an activity from a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Delete Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Activity ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Update Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Activity Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Activity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}/approve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approves an activity in a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Approve Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity approved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Activity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Activity ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}/comments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all comments associated with a specific activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get Activity Comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Comment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Activity ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Posts a new comment or reply on an activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Create Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Comment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}/comments/{commentID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a specific comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modifies the content of an existing comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Comment Content",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Comment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}/participants": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all participants for an activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get Participants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Participants fetched successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Contributor"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Activity ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/activity/{campaignID}/{activityID}/participants/{contributorID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Opts in a contributor to an activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Opt In Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor opted in successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid IDs",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Opts out a contributor from an activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Opt Out Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "activityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor opted out successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid IDs",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/analytics/process": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Triggers immediate processing of analytics data and sends results via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Process Analytics Now",
                "responses": {
                    "200": {
                        "description": "Analytics processed and sent to email",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Processing failed",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "description": "Initiates the authentication process for a user by sending a verification code to their email address. Requires user's name and email in request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate User",
                "parameters": [
                    {
                        "description": "Auth Credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Please check your email for the OTP.",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Otp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs, please check and try again",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Validates the verification code sent to user's email. Requires email, verification code, and request ID for verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verification Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authenticated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VerifyAuthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs, please check and try again",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/campaign/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new campaign with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaign"
                ],
                "summary": "Create Campaign",
                "parameters": [
                    {
                        "description": "Campaign Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs, please check and try again",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/campaign/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a campaign by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaign"
                ],
                "summary": "Get Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid campaign ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing campaign by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaign"
                ],
                "summary": "Update Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Campaign Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CampaignUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/comments/{comment_id}/replies": {
            "get": {
                "description": "Retrieves all reply comments for a given parent comment ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get replies for a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved replies",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Comment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid comment ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/contributor/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lists all contributors participating in the campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contributor"
                ],
                "summary": "Get All Contributors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributors retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Contributor"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registers a new contributor to the campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contributor"
                ],
                "summary": "Add Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contributor Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContributorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor added to Campaign",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Contributor"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/contributor/{campaignID}/{contributorID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific contributor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contributor"
                ],
                "summary": "Get Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Contributor"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid contributor ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Contributor not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Removes a contributor from the campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contributor"
                ],
                "summary": "Remove Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor removed from Campaign",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid contributor ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Contributor or Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modifies a contributor's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contributor"
                ],
                "summary": "Edit Contributor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Contributor Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContributorEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contributor updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Contributor"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Contributor not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/fcm/save-token": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Saves the FCM token for push notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Save FCM Token",
                "parameters": [
                    {
                        "description": "FCM Token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FCMUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FCM token saved",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid inputs, please check and try again",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/payment/contributor/{contributorID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initializes a payment for a contributor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Initialize Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment initialized successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.InitializePaymentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid contributor ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Contributor not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/payment/manual/contributor/{contributorID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initializes a manual payment for a contributor with optional reference file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Initialize Manual Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contributor ID",
                        "name": "contributorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Reference file for manual payment",
                        "name": "reference",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manual payment initialized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Payment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Contributor not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/payment/manual/verify/{reference}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verifies a manual payment using the reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Verify Manual Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment reference",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manual payment verified",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid reference",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/payment/paystack/webhook": {
            "post": {
                "description": "Processes incoming Paystack webhook events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Handle Paystack Webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paystack signature",
                        "name": "X-Paystack-Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Webhook event data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paystack.PaystackWebhookEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid webhook data",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    }
                }
            }
        },
        "/payment/verify/{reference}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verifies a payment using the reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Verify Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment reference",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment verified",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid reference",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/payout/bank-list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves list of available banks for payout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payout"
                ],
                "summary": "Get Bank List",
                "responses": {
                    "200": {
                        "description": "Bank list retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/paystack.Bank"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/payout/manual/{campaignID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initializes a manual payout for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payout"
                ],
                "summary": "Initialize Manual Payout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manual payout details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PayoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manual payout initialized successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Payout"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payout details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/payout/verify/bank-account": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verifies a bank account for payout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payout"
                ],
                "summary": "Verify Bank Account",
                "parameters": [
                    {
                        "description": "Account verification details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account verified successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/paystack.ResolveAccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid account details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/payout/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves payout information for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payout"
                ],
                "summary": "Get Campaign Payout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payout information retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Payout"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initializes a payout for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payout"
                ],
                "summary": "Initialize Payout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payout details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PayoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payout initialized successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Payout"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid payout details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/suggestions/activity": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates activity suggestions based on provided content text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestion"
                ],
                "summary": "Get Activity Suggestions by Text",
                "parameters": [
                    {
                        "description": "Content for suggestion generation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SuggestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity suggestions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ActivitySuggestion"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid inputs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.BadRequestResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.ValidationError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/suggestions/activity/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of suggested activities for a specific campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestion"
                ],
                "summary": "Get Campaign Activity Suggestions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity suggestions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ActivitySuggestion"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        },
        "/ws/campaign/{campaignID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establishes a WebSocket connection for real-time updates about campaign activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "websocket"
                ],
                "summary": "Campaign WebSocket Connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid campaign ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ActivityRequest": {
            "description": "Activity creation/update request structure",
            "type": "object",
            "required": [
                "cost",
                "title"
            ],
            "properties": {
                "cost": {
                    "description": "Cost of the activity (must be greater than 0)\n@example 1500.50",
                    "type": "number"
                },
                "imageUrl": {
                    "description": "Optional URL for activity image\n@example \"https://example.com/images/tree-planting.jpg\"",
                    "type": "string"
                },
                "isMandatory": {
                    "description": "Whether this activity is mandatory for the campaign\n@example true",
                    "type": "boolean"
                },
                "subtitle": {
                    "description": "Optional subtitle for additional context\n@example \"Phase 1 of reforestation project\"",
                    "type": "string"
                },
                "title": {
                    "description": "Activity title (minimum 4 characters)\n@example \"Plant Trees in Local Park\"",
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "dto.CampaignRequest": {
            "description": "Campaign creation request structure",
            "type": "object",
            "required": [
                "activities",
                "contributors",
                "description",
                "endDate",
                "images",
                "paymentMethod",
                "startDate",
                "title"
            ],
            "properties": {
                "activities": {
                    "description": "@Description CampaignActivities",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "contributors": {
                    "description": "@Description Campaign contributors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contributor"
                    }
                },
                "cryptoToken": {
                    "description": "@Description Crypto token (required if paymentMethod is crypto)\n@example \"ETH\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.CryptoToken"
                        }
                    ]
                },
                "description": {
                    "description": "@Description Detailed campaign description\n@example \"This campaign aims to protect and preserve our forest ecosystems...\"",
                    "type": "string",
                    "minLength": 100
                },
                "endDate": {
                    "description": "@Description Campaign end date (must be after start date)\n@example \"2025-02-03T13:51:06Z\"",
                    "type": "string"
                },
                "fiatCurrency": {
                    "description": "@Description Fiat currency code (required if paymentMethod is fiat)\n@example \"USD\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.FiatCurrency"
                        }
                    ]
                },
                "images": {
                    "description": "@Description Campaign images",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignImage"
                    }
                },
                "paymentMethod": {
                    "description": "@Description Payment method (fiat/crypto/manual)\n@example \"fiat\"",
                    "enum": [
                        "fiat",
                        "crypto",
                        "manual"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    ]
                },
                "startDate": {
                    "description": "@Description Campaign start date\n@example \"2025-01-03T13:51:06Z\"",
                    "type": "string"
                },
                "title": {
                    "description": "@Description Campaign title\n@example \"Save the Forests\"",
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "dto.CampaignUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.ContributorEditRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "dto.CreateCommentRequest": {
            "description": "Request structure for creating a new comment",
            "type": "object",
            "required": [
                "activityID",
                "content"
            ],
            "properties": {
                "activityID": {
                    "description": "ID of the activity this comment belongs to\n@example 123",
                    "type": "integer"
                },
                "content": {
                    "description": "Content of the comment\n@example \"This is a great project! Looking forward to contributing.\"",
                    "type": "string"
                },
                "parentId": {
                    "description": "Optional ID of the parent comment if this is a reply\n@example \"comment-123-abc\"",
                    "type": "string"
                }
            }
        },
        "dto.CreateContributorRequest": {
            "description": "Request structure for creating a new contributor",
            "type": "object",
            "required": [
                "amount",
                "campaignId",
                "email"
            ],
            "properties": {
                "amount": {
                    "description": "Amount of the contribution\n@example 100.50\n@minimum 0",
                    "type": "number",
                    "minimum": 0
                },
                "campaignId": {
                    "description": "ID of the campaign the contribution is for\n@example \"campaign-123-abc\"",
                    "type": "string"
                },
                "email": {
                    "description": "Email address of the contributor\n@example \"john.doe@example.com\"",
                    "type": "string"
                },
                "name": {
                    "description": "Optional name of the contributor\n@example \"John Doe\"",
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "dto.FCMUpdateRequest": {
            "description": "FCM token update request payload",
            "type": "object",
            "required": [
                "fcmtoken"
            ],
            "properties": {
                "fcmtoken": {
                    "type": "string",
                    "example": "your-fcm-token-here"
                }
            }
        },
        "dto.InitializePaymentResponse": {
            "type": "object",
            "required": [
                "payment_link",
                "payment_status",
                "reference"
            ],
            "properties": {
                "payment_link": {
                    "type": "string",
                    "example": "https://payment-gateway.com/pay/PAY-REF-123456789"
                },
                "payment_status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "completed",
                        "failed"
                    ],
                    "example": "pending"
                },
                "reference": {
                    "type": "string",
                    "example": "PAY-REF-123456789"
                }
            }
        },
        "dto.PayoutRequest": {
            "type": "object",
            "required": [
                "accountName",
                "accountNumber",
                "bankCode",
                "bankName"
            ],
            "properties": {
                "accountName": {
                    "type": "string",
                    "minLength": 3
                },
                "accountNumber": {
                    "type": "string"
                },
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "dto.SuggestionRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "description": "Content for generating suggestions",
                    "type": "string",
                    "example": "Trip to London for a day at midnight"
                }
            }
        },
        "dto.UpdateActivityRequest": {
            "description": "Activity update request structure",
            "type": "object",
            "required": [
                "cost",
                "title"
            ],
            "properties": {
                "cost": {
                    "description": "Cost of the activity (must be greater than 0)\n@example 1500.50",
                    "type": "number"
                },
                "image_url": {
                    "description": "Optional URL for activity image\n@example \"https://example.com/images/tree-planting.jpg\"",
                    "type": "string"
                },
                "is_approved": {
                    "description": "Approval status of the activity\n@example false",
                    "type": "boolean"
                },
                "is_mandatory": {
                    "description": "Whether this activity is mandatory for the campaign\n@example true",
                    "type": "boolean"
                },
                "subtitle": {
                    "description": "Optional subtitle for additional context\n@example \"Phase 1 of reforestation project\"",
                    "type": "string"
                },
                "title": {
                    "description": "Activity title (minimum 4 characters)\n@example \"Plant Trees in Local Park\"",
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "dto.UpdateCommentRequest": {
            "description": "Request structure for creating a new comment",
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "description": "Content of the comment\n@example \"This is a great project! Looking forward to contributing.\"",
                    "type": "string"
                }
            }
        },
        "dto.VerifyAccountRequest": {
            "type": "object",
            "required": [
                "accountNumber",
                "bankCode"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "bankCode": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyAuthRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "description": "@Description OTP code\n@example 123456",
                    "type": "string"
                },
                "email": {
                    "description": "@Description User's email\n@example user@example.com",
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyAuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJeiroijsffr..."
                }
            }
        },
        "handlers.BadRequestResponse": {
            "description": "Bad request error response structure",
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Validation errors (optional)\n@example [{\"field\":\"field\",\"error\":\"must be a valid data\"}]"
                },
                "message": {
                    "description": "Error message\n@example Invalid input provided",
                    "type": "string"
                },
                "status": {
                    "description": "Status will always be \"Bad Request\"\n@example Bad Request",
                    "type": "string",
                    "enum": [
                        "Bad Request"
                    ],
                    "example": "Bad Request"
                }
            }
        },
        "handlers.SuccessResponse": {
            "description": "Successful API response structure",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data (optional)\n@example null"
                },
                "message": {
                    "description": "Response message describing the success\n@example Operation completed successfully",
                    "type": "string"
                },
                "status": {
                    "description": "Status will always be \"OK\"\n@example OK",
                    "type": "string",
                    "enum": [
                        "OK"
                    ],
                    "example": "OK"
                }
            }
        },
        "handlers.UnauthorizedResponse": {
            "description": "Unauthorized error response structure",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Will always be \"Unauthorized\"\n@example Unauthorized",
                    "type": "string",
                    "enum": [
                        "Unauthorized"
                    ],
                    "example": "Unauthorized"
                },
                "status": {
                    "description": "Status will always be false for unauthorized\n@example false",
                    "type": "string",
                    "enum": [
                        "Unauthorized"
                    ],
                    "example": "Unauthorized"
                }
            }
        },
        "handlers.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "must be a valid field"
                },
                "field": {
                    "type": "string",
                    "example": "field"
                }
            }
        },
        "handlers.response": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data (optional)"
                },
                "errors": {
                    "description": "Error details (optional)"
                },
                "message": {
                    "description": "Response message\n@example Operation completed successfully",
                    "type": "string"
                },
                "status": {
                    "description": "Response status\n@example OK",
                    "type": "string"
                }
            }
        },
        "models.Activity": {
            "type": "object",
            "required": [
                "campaignId",
                "cost",
                "title"
            ],
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "contributors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contributor"
                    }
                },
                "cost": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isApproved": {
                    "type": "boolean"
                },
                "isMandatory": {
                    "type": "boolean"
                },
                "subtitle": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "models.ActivitySuggestion": {
            "type": "object",
            "properties": {
                "activityName": {
                    "type": "string"
                },
                "estimatedCost": {
                    "type": "string"
                }
            }
        },
        "models.Campaign": {
            "type": "object",
            "required": [
                "activities",
                "contributors",
                "createdByHandle",
                "description",
                "endDate",
                "images",
                "paymentMethod",
                "startDate",
                "targetAmount",
                "title"
            ],
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "contributors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contributor"
                    }
                },
                "createdByHandle": {
                    "type": "string"
                },
                "cryptoToken": {
                    "$ref": "#/definitions/models.CryptoToken"
                },
                "description": {
                    "type": "string",
                    "minLength": 100
                },
                "endDate": {
                    "type": "string"
                },
                "fiatCurrency": {
                    "$ref": "#/definitions/models.FiatCurrency"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignImage"
                    }
                },
                "key": {
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "Payment",
                    "enum": [
                        "fiat",
                        "crypto",
                        "manual"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    ]
                },
                "payout": {
                    "description": "Payout",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Payout"
                        }
                    ]
                },
                "startDate": {
                    "type": "string"
                },
                "targetAmount": {
                    "type": "number"
                },
                "title": {
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "models.CampaignImage": {
            "type": "object",
            "required": [
                "imageUrl"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "required": [
                "activityID",
                "content"
            ],
            "properties": {
                "activityID": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "#/definitions/models.User"
                },
                "id": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                }
            }
        },
        "models.Contributor": {
            "type": "object",
            "required": [
                "amount",
                "campaignId"
            ],
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "campaignId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "payment": {
                    "$ref": "#/definitions/models.Payment"
                }
            }
        },
        "models.CryptoAccount": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cryptoToken": {
                    "$ref": "#/definitions/models.CryptoToken"
                }
            }
        },
        "models.CryptoToken": {
            "type": "string",
            "enum": [
                "USDT",
                "USDC",
                "BUSD",
                "DAI"
            ],
            "x-enum-varnames": [
                "USDT",
                "USDC",
                "BUSD",
                "DAI"
            ]
        },
        "models.FiatAccount": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "models.FiatCurrency": {
            "type": "string",
            "enum": [
                "GHS",
                "NGN"
            ],
            "x-enum-varnames": [
                "GHS",
                "NGN"
            ]
        },
        "models.ManualPaymentProof": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Otp": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "authorization_url": {
                    "description": "PaymentURL",
                    "type": "string"
                },
                "campaignId": {
                    "type": "string"
                },
                "contributorId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "gatewayResponse": {
                    "type": "string"
                },
                "paymentMethod": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "paymentProof": {
                    "$ref": "#/definitions/models.ManualPaymentProof"
                },
                "paymentStatus": {
                    "$ref": "#/definitions/models.PaymentStatus"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "models.PaymentMethod": {
            "type": "string",
            "enum": [
                "fiat",
                "crypto",
                "manual"
            ],
            "x-enum-varnames": [
                "PaymentMethodFiat",
                "PaymentMethodCrypto",
                "PaymentMethodManual"
            ]
        },
        "models.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "succeeded",
                "failed",
                "pending_approval"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusSucceeded",
                "PaymentStatusFailed",
                "PaymentStatusPendingApproval"
            ]
        },
        "models.Payout": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "campaignId": {
                    "type": "string"
                },
                "completedAt": {
                    "type": "string"
                },
                "cryptoAccount": {
                    "$ref": "#/definitions/models.CryptoAccount"
                },
                "failureReason": {
                    "type": "string"
                },
                "fiatAccount": {
                    "$ref": "#/definitions/models.FiatAccount"
                },
                "payoutMethod": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "processedAt": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.PayoutStatus"
                }
            }
        },
        "models.PayoutStatus": {
            "type": "string",
            "enum": [
                "pending",
                "processing",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "PayoutStatusPending",
                "PayoutStatusProcessing",
                "PayoutStatusCompleted",
                "PayoutStatusFailed"
            ]
        },
        "models.User": {
            "description": "Authentication request payload",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "paystack.Bank": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "paystack.PaystackWebhookEvent": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "channel": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "currency": {
                            "type": "string"
                        },
                        "customer": {
                            "type": "object",
                            "properties": {
                                "customer_code": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        },
                        "id": {
                            "type": "integer"
                        },
                        "metadata": {
                            "type": "object",
                            "properties": {
                                "campaign_id": {
                                    "type": "string"
                                },
                                "contributor_id": {
                                    "type": "string"
                                }
                            }
                        },
                        "paid_at": {
                            "type": "string"
                        },
                        "reference": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        }
                    }
                },
                "event": {
                    "type": "string"
                }
            }
        },
        "paystack.ResolveAccountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "account_name": {
                            "type": "string"
                        },
                        "account_number": {
                            "type": "string"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key for accessing the API endpoints",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BearerAuth": {
            "description": "JWT token for authenticated requests. Use the format: Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "CampaignKeyAuth": {
            "description": "Campaign Key required for campaign-specific operations",
            "type": "apiKey",
            "name": "Campaign-Key",
            "in": "header"
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "tags": [
        {
            "description": "Secure authentication with end-to-end encryption, including login and OTP verification",
            "name": "auth"
        },
        {
            "description": "Group activity and event campaign management with encrypted data storage",
            "name": "campaign"
        },
        {
            "description": "Manage group members and their contributions with secure payment handling",
            "name": "contributor"
        },
        {
            "description": "Track and manage group activities and events securely",
            "name": "activity"
        },
        {
            "description": "Secure payment processing with flexible contribution options",
            "name": "payment"
        },
        {
            "description": "Safe fund distribution for group activities",
            "name": "payout"
        },
        {
            "description": "AI-powered suggestions for group activities and event planning",
            "name": "suggestion"
        },
        {
            "description": "Encrypted group communication with comments and replies",
            "name": "comment"
        },
        {
            "description": "Process analytics for platform performance",
            "name": "analytics"
        },
        {
            "description": "Real-time encrypted updates for group coordination",
            "name": "websocket"
        }
    ]
}