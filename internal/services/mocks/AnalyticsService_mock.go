// Code generated by mockery v2.50.0. DO NOT EDIT.

package interfaces

import (
	models "github.com/oyen-bright/goFundIt/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// MockAnalyticsService is an autogenerated mock type for the AnalyticsService type
type MockAnalyticsService struct {
	mock.Mock
}

type MockAnalyticsService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAnalyticsService) EXPECT() *MockAnalyticsService_Expecter {
	return &MockAnalyticsService_Expecter{mock: &_m.Mock}
}

// GetCurrentData provides a mock function with no fields
func (_m *MockAnalyticsService) GetCurrentData() *models.PlatformAnalytics {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCurrentData")
	}

	var r0 *models.PlatformAnalytics
	if rf, ok := ret.Get(0).(func() *models.PlatformAnalytics); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.PlatformAnalytics)
		}
	}

	return r0
}

// MockAnalyticsService_GetCurrentData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetCurrentData'
type MockAnalyticsService_GetCurrentData_Call struct {
	*mock.Call
}

// GetCurrentData is a helper method to define mock.On call
func (_e *MockAnalyticsService_Expecter) GetCurrentData() *MockAnalyticsService_GetCurrentData_Call {
	return &MockAnalyticsService_GetCurrentData_Call{Call: _e.mock.On("GetCurrentData")}
}

func (_c *MockAnalyticsService_GetCurrentData_Call) Run(run func()) *MockAnalyticsService_GetCurrentData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAnalyticsService_GetCurrentData_Call) Return(_a0 *models.PlatformAnalytics) *MockAnalyticsService_GetCurrentData_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAnalyticsService_GetCurrentData_Call) RunAndReturn(run func() *models.PlatformAnalytics) *MockAnalyticsService_GetCurrentData_Call {
	_c.Call.Return(run)
	return _c
}

// ProcessAnalyticsNow provides a mock function with no fields
func (_m *MockAnalyticsService) ProcessAnalyticsNow() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ProcessAnalyticsNow")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAnalyticsService_ProcessAnalyticsNow_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessAnalyticsNow'
type MockAnalyticsService_ProcessAnalyticsNow_Call struct {
	*mock.Call
}

// ProcessAnalyticsNow is a helper method to define mock.On call
func (_e *MockAnalyticsService_Expecter) ProcessAnalyticsNow() *MockAnalyticsService_ProcessAnalyticsNow_Call {
	return &MockAnalyticsService_ProcessAnalyticsNow_Call{Call: _e.mock.On("ProcessAnalyticsNow")}
}

func (_c *MockAnalyticsService_ProcessAnalyticsNow_Call) Run(run func()) *MockAnalyticsService_ProcessAnalyticsNow_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAnalyticsService_ProcessAnalyticsNow_Call) Return(_a0 error) *MockAnalyticsService_ProcessAnalyticsNow_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAnalyticsService_ProcessAnalyticsNow_Call) RunAndReturn(run func() error) *MockAnalyticsService_ProcessAnalyticsNow_Call {
	_c.Call.Return(run)
	return _c
}

// StartAnalytics provides a mock function with no fields
func (_m *MockAnalyticsService) StartAnalytics() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for StartAnalytics")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAnalyticsService_StartAnalytics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'StartAnalytics'
type MockAnalyticsService_StartAnalytics_Call struct {
	*mock.Call
}

// StartAnalytics is a helper method to define mock.On call
func (_e *MockAnalyticsService_Expecter) StartAnalytics() *MockAnalyticsService_StartAnalytics_Call {
	return &MockAnalyticsService_StartAnalytics_Call{Call: _e.mock.On("StartAnalytics")}
}

func (_c *MockAnalyticsService_StartAnalytics_Call) Run(run func()) *MockAnalyticsService_StartAnalytics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAnalyticsService_StartAnalytics_Call) Return(_a0 error) *MockAnalyticsService_StartAnalytics_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAnalyticsService_StartAnalytics_Call) RunAndReturn(run func() error) *MockAnalyticsService_StartAnalytics_Call {
	_c.Call.Return(run)
	return _c
}

// StopAnalytics provides a mock function with no fields
func (_m *MockAnalyticsService) StopAnalytics() {
	_m.Called()
}

// MockAnalyticsService_StopAnalytics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'StopAnalytics'
type MockAnalyticsService_StopAnalytics_Call struct {
	*mock.Call
}

// StopAnalytics is a helper method to define mock.On call
func (_e *MockAnalyticsService_Expecter) StopAnalytics() *MockAnalyticsService_StopAnalytics_Call {
	return &MockAnalyticsService_StopAnalytics_Call{Call: _e.mock.On("StopAnalytics")}
}

func (_c *MockAnalyticsService_StopAnalytics_Call) Run(run func()) *MockAnalyticsService_StopAnalytics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAnalyticsService_StopAnalytics_Call) Return() *MockAnalyticsService_StopAnalytics_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAnalyticsService_StopAnalytics_Call) RunAndReturn(run func()) *MockAnalyticsService_StopAnalytics_Call {
	_c.Run(run)
	return _c
}

// NewMockAnalyticsService creates a new instance of MockAnalyticsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAnalyticsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAnalyticsService {
	mock := &MockAnalyticsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
