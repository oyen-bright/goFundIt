// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	models "github.com/oyen-bright/goFundIt/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// ActivityService is an autogenerated mock type for the ActivityService type
type ActivityService struct {
	mock.Mock
}

// CreateActivity provides a mock function with given fields: activity, userHandle, campaignId
func (_m *ActivityService) CreateActivity(activity models.Activity, userHandle string, campaignId string) (models.Activity, error) {
	ret := _m.Called(activity, userHandle, campaignId)

	if len(ret) == 0 {
		panic("no return value specified for CreateActivity")
	}

	var r0 models.Activity
	var r1 error
	if rf, ok := ret.Get(0).(func(models.Activity, string, string) (models.Activity, error)); ok {
		return rf(activity, userHandle, campaignId)
	}
	if rf, ok := ret.Get(0).(func(models.Activity, string, string) models.Activity); ok {
		r0 = rf(activity, userHandle, campaignId)
	} else {
		r0 = ret.Get(0).(models.Activity)
	}

	if rf, ok := ret.Get(1).(func(models.Activity, string, string) error); ok {
		r1 = rf(activity, userHandle, campaignId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewActivityService creates a new instance of ActivityService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewActivityService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ActivityService {
	mock := &ActivityService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
