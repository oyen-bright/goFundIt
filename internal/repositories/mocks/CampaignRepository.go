// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	models "github.com/oyen-bright/goFundIt/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// CampaignRepository is an autogenerated mock type for the CampaignRepository type
type CampaignRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: campaign
func (_m *CampaignRepository) Create(campaign *models.Campaign) (models.Campaign, error) {
	ret := _m.Called(campaign)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 models.Campaign
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.Campaign) (models.Campaign, error)); ok {
		return rf(campaign)
	}
	if rf, ok := ret.Get(0).(func(*models.Campaign) models.Campaign); ok {
		r0 = rf(campaign)
	} else {
		r0 = ret.Get(0).(models.Campaign)
	}

	if rf, ok := ret.Get(1).(func(*models.Campaign) error); ok {
		r1 = rf(campaign)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: campaignID
func (_m *CampaignRepository) Delete(campaignID string) error {
	ret := _m.Called(campaignID)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(campaignID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByCreatorHandle provides a mock function with given fields: handle, preload
func (_m *CampaignRepository) GetByCreatorHandle(handle string, preload bool) (models.Campaign, error) {
	ret := _m.Called(handle, preload)

	if len(ret) == 0 {
		panic("no return value specified for GetByCreatorHandle")
	}

	var r0 models.Campaign
	var r1 error
	if rf, ok := ret.Get(0).(func(string, bool) (models.Campaign, error)); ok {
		return rf(handle, preload)
	}
	if rf, ok := ret.Get(0).(func(string, bool) models.Campaign); ok {
		r0 = rf(handle, preload)
	} else {
		r0 = ret.Get(0).(models.Campaign)
	}

	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(handle, preload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: id, preload
func (_m *CampaignRepository) GetByID(id string, preload bool) (models.Campaign, error) {
	ret := _m.Called(id, preload)

	if len(ret) == 0 {
		panic("no return value specified for GetByID")
	}

	var r0 models.Campaign
	var r1 error
	if rf, ok := ret.Get(0).(func(string, bool) (models.Campaign, error)); ok {
		return rf(id, preload)
	}
	if rf, ok := ret.Get(0).(func(string, bool) models.Campaign); ok {
		r0 = rf(id, preload)
	} else {
		r0 = ret.Get(0).(models.Campaign)
	}

	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(id, preload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: campaign
func (_m *CampaignRepository) Update(campaign *models.Campaign) (models.Campaign, error) {
	ret := _m.Called(campaign)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 models.Campaign
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.Campaign) (models.Campaign, error)); ok {
		return rf(campaign)
	}
	if rf, ok := ret.Get(0).(func(*models.Campaign) models.Campaign); ok {
		r0 = rf(campaign)
	} else {
		r0 = ret.Get(0).(models.Campaign)
	}

	if rf, ok := ret.Get(1).(func(*models.Campaign) error); ok {
		r1 = rf(campaign)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCampaignRepository creates a new instance of CampaignRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCampaignRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CampaignRepository {
	mock := &CampaignRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
